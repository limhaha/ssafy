package com.ssafy.algo;

import java.util.Scanner;

public class Solution22 {

	public static void main(String[] args) {
		int T, N, num;

		Scanner sc = new Scanner(System.in);
		T = sc.nextInt();

		int[] dx = { 1, 0, -1, 0 }; // 순서 상하좌우
		int[] dy = { 0, -1, 0, 1 };

		for (int testcase = 0; testcase < T; testcase++) { // 테스트케이스 만큼 반복
			N = sc.nextInt(); // map 크기
			num = sc.nextInt(); // 소금쟁이 수
			int remain = num;
			int[][] map = new int[N][N]; // 자동으로 모두 0으로 초기화

			for (int i = 0; i < num; i++) {
				int r = sc.nextInt() - 1; // 행
				int c = sc.nextInt() - 1; // 열
				int dir = sc.nextInt() -1; // 방향

				int nx = c;
				int ny = r;
				
				for(int j=3; j>=1; j--) {
					nx = nx + c + (j * dx[dir]);
					ny = ny + r + (j * dy[dir]);
					System.out.println(j);
					if(nx<0 || nx>=N || ny<0 || ny>=N) {
						remain--;
						break;
					}
					if(map[ny][nx] == 1) {
						remain--;
						break;
					}
					
					if(j==1) {
						map[c + (6*dx[dir])][r + (6*dy[dir])] = 1;
					}
				}
				
//				map[r + (3*dy[dir])][c + (3*dx[dir])] = 1;
			}
			
			System.out.println(remain);
		}

	}

}
