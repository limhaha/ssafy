package com.ssafy.ws02.step3;

import java.util.Scanner;

public class Solution {

	public static void main(String[] args) {
		int T;

		int[] dx = { 1, 1, 0, -1, -1, -1, 0, 1};
		int[] dy = { 0, -1, -1, -1, 0, 1, 1, 1};

		Scanner sc = new Scanner(System.in);
		T = sc.nextInt();

		for (int a = 0; a < T; a++) {
			int N = sc.nextInt();
			char[][] map = new char[N][N];

			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					map[i][j] = sc.next().charAt(0);
				}
			}

			int max = Integer.MIN_VALUE;
			
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					
					int sum = 0;
					if (map[i][j] == 'B') {
						for (int k = 0; k < 8; k++) {
							
							if(map[i+dx[k]][j+dy[k]] == 'G') {
								sum += 2;
							}
							else {
								int cnt=0;
								for(int l=0; l<N; l++) {
									if(map[i][l] == 'B') {
										sum++;
									}
									if(map[l][j] == 'B') {
										sum++;
									}
								}
								sum = sum -1;
							}
							
						}
					}
					
					max = Math.max(sum, max);
				}
			}
			
			System.out.println(max);
		}

	}

}
